import * as React from 'react';
import { useState, useEffect, lazy } from 'react';
import { createPortal } from 'react-dom';
import { useLocation, useNavigate, useParams  } from 'react-router-dom';
import '../App.css';
import { styled, alpha } from '@mui/material/styles';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import Toolbar from '@mui/material/Toolbar';
import IconButton from '@mui/material/IconButton';
import Typography from '@mui/material/Typography';
import InputBase from '@mui/material/InputBase';
import Badge from '@mui/material/Badge';
import MenuItem from '@mui/material/MenuItem';
import Menu from '@mui/material/Menu';
import Button from '@mui/material/Button';
import Drawer from '@mui/material/Drawer';
import ListItemIcon from '@mui/material/ListItemIcon';
import { ethers, BrowserProvider } from 'ethers';
import Alert from '@mui/material/Alert';

import LNR from '../modules/lnr.mjs';
import LNR_WEB from '../modules/lnr_web.mjs';




const Search = styled('div')(({ theme }) => ({
  position: 'relative',
  borderRadius: theme.shape.borderRadius,
  backgroundColor: alpha(theme.palette.common.white, 0.15),
  '&:hover': {
    backgroundColor: alpha(theme.palette.common.white, 0.25),
  },
  marginRight: theme.spacing(2),
  marginLeft: 0,
  width: '100%',
  [theme.breakpoints.up('sm')]: {
    marginLeft: theme.spacing(3),
    width: 'auto',
  },
}));

const SearchIconWrapper = styled('div')(({ theme }) => ({
  padding: theme.spacing(0, 2),
  height: '100%',
  position: 'absolute',
  pointerEvents: 'none',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
}));

const StyledInputBase = styled(InputBase)(({ theme }) => ({
  color: 'inherit',
  '& .MuiInputBase-input': {
    padding: theme.spacing(1, 1, 1, 0),
    // vertical padding + font size from searchIcon
    paddingLeft: `calc(1em + ${theme.spacing(4)})`,
    transition: theme.transitions.create('width'),
    width: '100%',
    [theme.breakpoints.up('md')]: {
      width: '20ch',
    },
  },
}));

export default function Navbar() {
  const [name, setName] = useState('Connect');
  const [address, setAddress] = useState();
  const [searchName, setSearchName] = useState("lnrforever.og");
  const [showAlert, setShowAlert] = useState();
  const [showLogo, setShowLogo] = useState(true);
  const [ogPage, setOgPage] = useState();
  const [sw, setSw] = useState(false)
  const [log2, setlog2 ] = useState(['start'])
  const [fin, setfinalData] = useState('<div>hi</div>');

  const CustomIframe = ({
    children,
    ...props
  }) => {
    const [contentRef, setContentRef] = useState(null)
  
    const mountNode =
      contentRef?.contentWindow?.document?.body
  
    return (
      <iframe {...props} ref={setContentRef}>
        {mountNode && createPortal(children, mountNode)}
      </iframe>
    )
  }

  function MyComponent(fin) {
    const x = fin;
    console.log("x is ", x.toString())
    return (
        <div dangerouslySetInnerHTML={{__html: fin}}>
            
        </div>
    )
}






  //const provider = new ethers.providers.Web3Provider(window.ethereum);
  const provider = ((window.ethereum != null) ? new ethers.providers.Web3Provider(window.ethereum) : ethers.providers.getDefaultProvider());


  const handleAlert = (msg) =>{
    //console.log("msg is", msg)
    if(msg && typeof value == "string" &&  msg.includes("Error loading asset at derp://0x000")){
      setShowAlert("Website not published.")
      setTimeout(() => {
        setShowAlert()
      }, 3000);
      return
      ////console.log("go")
      //setShowAlert()
    }
    else if(msg && msg == "con"){
      setShowAlert("Please connect to explore")
      setTimeout(() => {
        setShowAlert()
      }, 3000);
      return
    }
    else{
      setShowAlert("oops! Something went wrong.")
      setTimeout(5000);
      setTimeout(() => {
        setShowAlert()
      }, 3000);
      return
    }
  }

  const isOg = (name)=>{
    if(!name || name.length < 1){
      return(false)
    }

    if(name){
      console.log("checking name")
      console.log(name)
      var nameArray = name.split('.')
      if(nameArray[1] == "og"){
        console.log('good')
        return(true)
      }
    }
    return(false)
    
  }


  const handleParams = async (p) =>{
    if(p){
      console.log("p is", p)
      await handleSearch(p.toString())
      
    }
  }

  const handleURL = (searched) =>{

    if(searched !== ogPage){
      const url = new URL(window.location);
      console.log(url)
      console.log("pushed")
      window.history.pushState('data', "", searched);
    }

  }


  const handleSearch = async(p="null")=>{
    var toSearch = searchName
    if(p && p !== "null" && typeof(p) == "string"){
      var toSearch = p
    }

    //window.history.replaceState("", "",/toSearch)

    

    // console.log("param is", typeof(param), toSearch)

    // if(toSearch.length <1){
    //   return
    // }


    if(toSearch && toSearch.length > 1 && isOg(toSearch)){
      if(typeof(window.og.lnrWeb) === "undefined"){
        return(handleAlert("con"))
      }
      try{
        setSearchName(toSearch)
        var website = await window.og.lnrWeb.getWebsite(toSearch)
        console.log("found")
        console.log(website.toString())
        if(website){
          setShowLogo(false)
          document.getElementById('chain_frame').srcdoc = ""
          document.getElementById('chain_frame').srcdoc = website.finalData;
          document.getElementById('chain_frame2').srcdoc = '<html><head><meta name="viewport" content="width=device-width,initial-scale=1"><meta charset="UTF-8"><!-- jquery --><script src="data:text/javascript;base64, "></script><!-- bulma --><link rel="stylesheet" href="data:text/css;base64, "><!-- Material Icons--><link rel="stylesheet" href="data:text/css;base64, "><script type="importmap">{ "imports": { "three": "data:text/javascript;base64, " } }</script><script type="module" crossorigin src="data:text/javascript;base64, "></script><link rel="stylesheet" href="data:text/css;base64, Ojotd2Via2l0LXNjcm9sbGJhcnt3aWR0aDo2cHh9Ojotd2Via2l0LXNjcm9sbGJhci10cmFja3std2Via2l0LWJvcmRlci1yYWRpdXM6NXB4O2JvcmRlci1yYWRpdXM6NXB4O2JhY2tncm91bmQ6I2I4YjdiNyFpbXBvcnRhbnR9Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYnstd2Via2l0LWJvcmRlci1yYWRpdXM6NXB4O2JvcmRlci1yYWRpdXM6NXB4O2JhY2tncm91bmQ6IzgyODI4Mn06Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOndpbmRvdy1pbmFjdGl2ZXtiYWNrZ3JvdW5kOiNhZGFkYWR9Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOiNmZmYhaW1wb3J0YW50fTo6LXdlYmtpdC1pbnB1dC1kaXNhYmxlZHtiYWNrZ3JvdW5kLWNvbG9yOiMxZjFmMWYhaW1wb3J0YW50fWJvZHl7bWFyZ2luOjA7Zm9udC1mYW1pbHk6LWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsU2Vnb2UgVUksUm9ib3RvLE94eWdlbixVYnVudHUsQ2FudGFyZWxsLEZpcmEgU2FucyxEcm9pZCBTYW5zLEhlbHZldGljYSBOZXVlLHNhbnMtc2VyaWY7LXdlYmtpdC1mb250LXNtb290aGluZzphbnRpYWxpYXNlZDstbW96LW9zeC1mb250LXNtb290aGluZzpncmF5c2NhbGU7YmFja2dyb3VuZC1jb2xvcjojMWYxZjFmO2NvbG9yOiNmZmY7bWluLWhlaWdodDoxMDAlfS5jYW52YXNiZ3t3aWR0aDoxMDAlO2hlaWdodDoxMDAlfWNvZGV7Zm9udC1mYW1pbHk6c291cmNlLWNvZGUtcHJvLE1lbmxvLE1vbmFjbyxDb25zb2xhcyxDb3VyaWVyIE5ldyxtb25vc3BhY2V9Lm1JY29ue21hcmdpbi1sZWZ0OjJweCFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjJweCFpbXBvcnRhbnQ7ei1pbmRleDoxMDAhaW1wb3J0YW50fS5tSWNvbjpob3ZlciwuZ3I6aG92ZXJ7Y3Vyc29yOnBvaW50ZXIhaW1wb3J0YW50O3RyYW5zZm9ybTpzY2FsZSgxLjA1KSBwZXJzcGVjdGl2ZSgxcHgpIWltcG9ydGFudH0ubW46aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojYTg5YmUxIWltcG9ydGFudH1ib2R5LmRhcmt7aGVpZ2h0OjEwMCU7YmFja2dyb3VuZC1jb2xvcjojMWYxZjFmO2NvbG9yOiNmZmZ9LmZ1bGxIZWlnaHR7aGVpZ2h0OjEwMCU7YWxpZ24taXRlbXM6c3RyZXRjaDttaW4td2lkdGg6MTJyZW19LmxpbmFnZWV7YmFja2dyb3VuZC1jb2xvcjojYTg5YmUxfS5kYXJrTmF2e2JhY2tncm91bmQtY29sb3I6IzFmMWYxZjtib3JkZXItYm90dG9tOnNvbGlkIDJweCB3aGl0ZX0ubGluYWdlZS1ib3JkZXJ7Ym9yZGVyOnNvbGlkIDJweDtib3JkZXItY29sb3I6I2E4OWJlMX0ubG9nb2Z7cG9zaXRpb246YWJzb2x1dGU7bGVmdDo1MCU7Ym90dG9tOjQwJTt0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7bWFyZ2luOjAgYXV0bzt6LWluZGV4OjEwMDB9LmxvZ29UaXRsZXtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjUwJTtib3R0b206MjclO3RyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwtNTAlKTttYXJnaW46MCBhdXRvO3otaW5kZXg6MTAwMDtmb250LXNpemU6eHgtbGFyZ2U7Zm9udC13ZWlnaHQ6NTAwO3RleHQtc2hhZG93OjAgMCAxNXB4ICNlNjAwNzN9Lm1haW5Mb2dve3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6NTAlO2JvdHRvbTozMnZoO3RyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwtNTAlKTttYXJnaW46MCBhdXRvO3otaW5kZXg6MTAwMH0uc3ZnLXNoYWRvd3thbmltYXRpb246c3ZnLXNoYWRvdyAxLjVzIGVhc2UtaW4tb3V0IGluZmluaXRlIGFsdGVybmF0ZX1Aa2V5ZnJhbWVzIHN2Zy1zaGFkb3d7MCV7ZmlsdGVyOmRyb3Atc2hhZG93KDAgMCA1cHggI2ZmZikgZHJvcC1zaGFkb3coMCAwIDE1cHggI2U2MDA3MykgZHJvcC1zaGFkb3coMCAwIDIwcHggI2U2MDA3Myl9dG97ZmlsdGVyOmRyb3Atc2hhZG93KDAgMCAyMHB4ICNmZmYpIGRyb3Atc2hhZG93KDAgMCAyNXB4ICNlNjAwNzMpIGRyb3Atc2hhZG93KDAgMCA0MHB4ICNlNjAwNzMpfX0uYm90dG9te3dpZHRoOjEwMCV9Lnp7ei1pbmRleDozMDAwIWltcG9ydGFudH0ucGFnZXtwYWRkaW5nOjI1cHggMTVweCAxNXB4O2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7Y29sb3I6I2ZmZiFpbXBvcnRhbnR9LnJlbHthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHJnYigxNjgsMTU1LDIyNSksIzkwY2RmNCkhaW1wb3J0YW50O2JhY2tncm91bmQtY29sb3I6bGluZWFyLWdyYWRpZW50KHJnYigxNjgsMTU1LDIyNSksIzkwY2RmNCkhaW1wb3J0YW50fS5pcy10cmFuc3BhcmVudHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50IWltcG9ydGFudH0uZGFyay1iZ3tiYWNrZ3JvdW5kLWNvbG9yOiMxZjFmMWZ9Lm5vLWJne2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQhaW1wb3J0YW50fS5obXtib3JkZXI6c29saWQgIzdiZDVkOCAycHg7d2lkdGg6NDAlO2hlaWdodDo4MCV9Lmxne2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHJnYigxNjgsMTU1LDIyNSksIzkwY2RmNCl9LmVycm9yQ2xhc3N7Ym9yZGVyOnNvbGlkIHJlZCAycHg7b3V0bGluZS1vZmZzZXQ6MTVweDtib3JkZXItcmFkaXVzOjRweH0uZXJyb3JCb3h7YmFja2dyb3VuZC1jb2xvcjojZTE4ODg4O2NvbG9yOiNiODJhMmF9LnN1Y2Nlc3NCb3h7YmFja2dyb3VuZC1jb2xvcjojOTlkZTlmO2NvbG9yOiMxOTYzMWZ9LmFuaW1hdGVke2FuaW1hdGlvbi1kZWxheToyczstd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjoyczthbmltYXRpb24tZHVyYXRpb246MnM7LXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlOmJvdGg7YW5pbWF0aW9uLWZpbGwtbW9kZTpib3RofUAtd2Via2l0LWtleWZyYW1lcyBmYWRlT3V0ezAle29wYWNpdHk6MX10b3tvcGFjaXR5OjB9fUBrZXlmcmFtZXMgZmFkZU91dHswJXtvcGFjaXR5OjF9dG97b3BhY2l0eTowfX0uZmFkZU91dHstd2Via2l0LWFuaW1hdGlvbi1uYW1lOmZhZGVPdXQ7YW5pbWF0aW9uLW5hbWU6ZmFkZU91dH0uc21vb3RoVHJhbnNpdGlvbnt0cmFuc2l0aW9uOnRyYW5zZm9ybSAxcyBlYXNlLWluLW91dH0ucHJvZmlsZUluZm97d2lkdGg6ODAlO2NvbG9yOiNmZmY7aGVpZ2h0OjEwMCU7cGFkZGluZy10b3A6MTBweH0ucHJvZmlsZUNhcmR7bWFyZ2luOjE1cHg7Y29sb3I6I2ZmZiFpbXBvcnRhbnQ7Ym9yZGVyLXJhZGl1czoxMHB4IWltcG9ydGFudH0ucHJvZmlsZVByaW1hcnl7bWFyZ2luLXRvcDo3NSV9LnByb2ZpbGVMe21hcmdpbi1sZWZ0Oi04NiV9LmNlbnRlckNvbHVtbnthbGlnbi1pdGVtczpjZW50ZXIhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpjZW50ZXIhaW1wb3J0YW50fS5id3t3aWR0aDoxMDAlfS5uYW1le2NvbG9yOiNmZmYhaW1wb3J0YW50O2ZvbnQtd2VpZ2h0OjQwMDtib3JkZXI6c29saWQgMnB4O2JvcmRlci1jb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQhaW1wb3J0YW50fS50YWdDb3VudHtwYWRkaW5nOjVweDtjb2xvcjojYTk5ZGUyIWltcG9ydGFudDtmb250LXdlaWdodDo0MDA7Ym9yZGVyOnNvbGlkIDJweDtib3JkZXItY29sb3I6I2E4OWJlMTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50IWltcG9ydGFudH0ud2h7Y29sb3I6I2ZmZiFpbXBvcnRhbnQ7Zm9udC13ZWlnaHQ6bGlnaHRlcn0udGFibGVTdHlsZXtjb2xvcjojZmZmO292ZXJmbG93LXg6c2Nyb2xsfS50YWJsZVJvd3tjdXJzb3I6cG9pbnRlcn0udGFibGVSb3c6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojYTg5YmUxfS5obXtib3JkZXI6c29saWQgcmVkIDJweH0uc3BhY2VSb3d7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvdztqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0uc3BhY2Vye2hlaWdodDoxMnJlbTt3aWR0aDo4MCV9Lm1ib3h7d2lkdGg6NjAlO2hlaWdodDpmaXQtY29udGVudCFpbXBvcnRhbnR9Lm13e21heC13aWR0aDo3MCV9LnNte3dpZHRoOjUwJX0uY257anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9LnBvcHtwb3NpdGlvbjpmaXhlZDtsZWZ0OjUwJTtib3R0b206MjBweDt0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7bWFyZ2luOjAgYXV0bzt6LWluZGV4OjEwMDB9LmJ1dHRvbjpob3Zlcnt0cmFuc2Zvcm06c2NhbGUoMS4wNSkgcGVyc3BlY3RpdmUoMXB4KX0ucHJvZ3Jlc3N7Ym9yZGVyOjA7aGVpZ2h0OjVweCFpbXBvcnRhbnQ7Ym9yZGVyLXJhZGl1czowIWltcG9ydGFudH0ucHJvZ3Jlc3M6Oi13ZWJraXQtcHJvZ3Jlc3MtYmFye2JvcmRlcjowO2hlaWdodDo1cHghaW1wb3J0YW50O2JvcmRlci1yYWRpdXM6MCFpbXBvcnRhbnR9LnByb2dyZXNzOjotd2Via2l0LXByb2dyZXNzLXZhbHVle2JvcmRlcjowO2hlaWdodDo1cHghaW1wb3J0YW50O2JvcmRlci1yYWRpdXM6MCFpbXBvcnRhbnR9LnByb2dyZXNzOjotbW96LXByb2dyZXNzLWJhcntib3JkZXI6MDtoZWlnaHQ6NXB4IWltcG9ydGFudDtib3JkZXItcmFkaXVzOjAhaW1wb3J0YW50fS5tb2RhbEJne2JhY2tncm91bmQtY29sb3I6IzMwMzAzMCFpbXBvcnRhbnR9Ll9BcHBfM2N0ZGxfMXt0ZXh0LWFsaWduOmNlbnRlcjttaW4taGVpZ2h0OjEwMHZoO2NvbG9yOiNmZmZ9Ll9sb2dvXzNjdGRsXzEze2FuaW1hdGlvbjpfbG9nby1zcGluXzNjdGRsXzEgaW5maW5pdGUgMjBzIGxpbmVhcjtoZWlnaHQ6NDB2bWluO3BvaW50ZXItZXZlbnRzOm5vbmV9Ll9oZWFkZXJfM2N0ZGxfMjV7YmFja2dyb3VuZC1jb2xvcjojMjgyYzM0O2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7Zm9udC1zaXplOmNhbGMoMTBweCArIDJ2bWluKTtjb2xvcjojZmZmfS5fbGlua18zY3RkbF80NXtjb2xvcjojYjMxOGYwfUBrZXlmcmFtZXMgX2xvZ28tc3Bpbl8zY3RkbF8xezAle3RyYW5zZm9ybTpyb3RhdGUoMCl9dG97dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX0K"/></head><body><noscript>no-js</noscript><div id="root"></div></body></html>'
          setfinalData(website.finalData)
          handleURL(toSearch);
          return
        }
        else{
          handleAlert("oops")

        }
      }
      catch(e){
        //console.log(e)
        handleAlert(e)
      }

    }
    if(toSearch && toSearch.length > 1 && !isOg(toSearch)){
      
      if(typeof(window.og) === "undefined" || typeof(window.og.lnrWeb) === "undefined"){
        return(handleAlert("con"))
      }
      setSearchName(toSearch + ".og")
      try{
        var website = await window.og.lnrWeb.getWebsite(toSearch + ".og")
        if(website){
          document.getElementById('chain_frame').srcdoc = ""
          document.getElementById('chain_frame').srcdoc = website.finalData;
          setfinalData(website.finalData)
          handleURL(toSearch+".og");
          return
        }
        else{
          handleAlert("oops")
          return

        }
      }
      catch(e){
        //console.log(e)
        handleAlert(e)
      }
      return

    }



    
  }







  // //console.log("lnr is", LNR)

  const connectWallet = async()=>{
    
    if(!provider){
      return
    }

      var og = {
        ethers: ethers,
        signer: null,
        provider: null,
        lnr: null,
        lnrWeb: null,
        website: null,
        redirect: null
      }
  
      console.log("CONNECTING")
     
      

      try{
        await provider.send("eth_requestAccounts", []);
      }
      catch(e){
        console.log("e is", e)
      }


      const signer = provider.getSigner();


      
      var lnr = new LNR(ethers, signer);
      if(!provider){
        return(handleAlert("oops"))
      }
      
      var lnrWeb = new LNR_WEB(lnr, provider);
      if(!lnrWeb){
        return(handleAlert("oops"))
      }

      console.log("provider ios", provider)
      console.log(provider)
      console.log(lnr)
      
      var wallet = await signer.getAddress();
      console.log("lnrweb is", wallet);
      console.log(wallet)
      og.signer = signer;
      og.provider = provider;
      og.lnr = lnr;
      og.lnrWeb = lnrWeb;
      window.og = og;
      og.redirect = async function(domain){
        setOgPage(domain)
      }


      if(wallet){
        setSw(true)
        setAddress(wallet)
        await handleName(wallet)
      }

      var pathArray = (id.pathname).split('/')
      if(pathArray[1] == "og" && (pathArray[2]).length > 0){
        handleParams(pathArray[2])
        // setSearchName(pathArray[2])
        // if(typeof(pathArray[2]) == "string"){
        //   await handleSearch(pathArray[2])
        // }
        
      }
      else{
        await handleSearch(searchName)
      }


    return

  }


  const handleName = async(address) =>{
    try{
      var name = await window.og.lnr.lookupAddress(address);
      if(name){
        setName(name)
      }
      else{
        setName(address.substring(0,6) + "..." + address.slice(address.length-4))
      }
    } 
    catch(e){
      setName(address.substring(0,6) + "..." + address.slice(address.length-4))
    }
  }





  const [anchorEl, setAnchorEl] = React.useState(null);
  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);

  const isMenuOpen = Boolean(anchorEl);
  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);

  const handleOpenNavMenu = (event) => {
    //console.log("opening")
    setAnchorEl(event.currentTarget);
  };

  const handleProfileMenuOpen = (event) => {
    setAnchorEl(event.currentTarget);
  };

  const handleMobileMenuClose = () => {
    setMobileMoreAnchorEl(null);
  };

  const handleMenuClose = () => {
    setAnchorEl(null);
    handleMobileMenuClose();
  };

  const handleMobileMenuOpen = (event) => {
    setMobileMoreAnchorEl(event.currentTarget);
  };

  const openLinagee = ()=>{
    //console.log("clkicked")
    const url = 'https://linagee.vision/';
    window.open(url, '_blank', 'noreferrer');

  }


  const id = useLocation();
  useEffect(() => {
    var pathArray = (id.pathname).split('/')
    if(pathArray[1] == "og" && (pathArray[2]).length > 0){
      setOgPage(pathArray[2])
    }
  });


  useEffect(() =>{

    const tryConnect = async () => {
      await connectWallet();
    }

    if(window.ethereum && !address && !window.ethereum?.selectedAddress){
      handleAlert("con")
    }
    else{
      handleAlert("con")
      console.log("not connected")
    }

  },[])


  useEffect(()=>{
    const tryConnect = async () => {
      await connectWallet();
    }

     if(window.ethereum && window.ethereum?.selectedAddress !== address && ethers.utils.isAddress(window.ethereum?.selectedAddress) && sw !== true){
      console.log("here")
        tryConnect();
     }


   })

   useEffect(()=>{
    if(window.og?.redirect){
        window.og.redirect = async function(domain){
          console.log("new domain is ", domain);
          console.log(domain)
          if(window.ethereum  && domain && address && window.ethereum?.selectedAddress && ethers.utils.isAddress(window.ethereum?.selectedAddress) ){
            const url = 'https://web.linagee.vision/og/'+domain;
            window.open(url, '_blank', 'noreferrer');    
          }

      }
    }
   })


  const menuId = 'primary-search-account-menu';
  const renderMenu = (
    <Menu
      anchorEl={anchorEl}
      anchorOrigin={{
        vertical: 'bottom',
        horizontal: 'left',
      }}
      id={menuId}
      keepMounted
      transformOrigin={{
        vertical: 'top',
        horizontal: 'right',
      }}
      open={isMenuOpen}
      onClose={handleMenuClose}
    >

      <MenuItem onClick={()=>(openLinagee(), handleMenuClose)}>
      <ListItemIcon>
      <img className='black' width="30px" height="30px" src={'/logo.svg'} />
      </ListItemIcon>
        Linagee.vision
        </MenuItem>
      
    </Menu>
  );

  const mobileMenuId = 'primary-search-account-menu-mobile';
  const renderMobileMenu = (
    <Drawer

      anchor={"top"}
      id={mobileMenuId}
      keepMounted

      open={isMobileMenuOpen}
      onClose={handleMobileMenuClose}
      style={{textAlign: "center", alignItems: "center", justifyContent: 'center'}}
    >

      <Button className="btn" onClick={connectWallet} style={{marginLeft: "25%", marginRight: "25%", marginTop: "10px", marginBottom: "10px"}} variant="outlined" color="primary">{name}</Button>
    
    </Drawer>
  );

  return (
    <Box sx={{ flexGrow: 1 }}>
      <AppBar position="static">
        <Toolbar>
          <IconButton
            size="large"
            edge="start"
            color="inherit"
            aria-label="open drawer"
            sx={{ mr: 2 }}
            onClick={handleOpenNavMenu}
          >
       =
          </IconButton>
          <Typography
            variant="h6"
            noWrap
            component="div"
            
            sx={{ display: { xs: 'none', sm: 'block' } }}
          >
            <img width="50px" height="50px" src={'/logo.svg'} />
          </Typography>
          <Search>
            <StyledInputBase
              placeholder="search.og …"
              inputProps={{ 'aria-label': 'search' }}
              value={searchName || ""}
              onChange={(event)=>setSearchName(event.target.value)}
              onKeyDown={(ev) => {
                if (ev.key === 'Enter') {
                  handleSearch()
                  ev.preventDefault();
                }
              }}
            />
            <IconButton onClick={handleSearch}>
            <img width="20px" height="20px" src={'/searchicon.svg'} />
            </IconButton>
          </Search>
          <Box sx={{ flexGrow: 1 }} />
          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>
            <Button className="btn" variant="outlined" color="secondary" onClick={connectWallet}>{name}</Button>
          </Box>
          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>
            <IconButton
              size="large"
              aria-label="show more"
              aria-controls={mobileMenuId}
              aria-haspopup="true"
              onClick={handleMobileMenuOpen}
              color="inherit"
            >
              <img width="15px" height="25px" src={'/more.svg'} />
            </IconButton>
          </Box>
        </Toolbar>
      </AppBar>
      {renderMobileMenu}
      {renderMenu}
      
      Website data:
      <br/> 
      {fin}
      {showAlert &&(
        <Alert className="alrt fadeOut" severity="warning">{showAlert} </Alert>
      )}
        {showLogo &&(
   
        <img className="mainLogo fadeOut" width="200px" height="200px" src={'/logo.svg'} />
    
      )}
    </Box>
  );
}